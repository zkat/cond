{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap 469ef09c05205d3ad3f4","./src/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;ACTA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA,wC;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,mBAAkB,sBAAsB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA8B,UAAU,EAAE;AAC1C,IAAG;AACH;;AAEA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cond\"] = factory();\n\telse\n\t\troot[\"cond\"] = factory();\n})(this, function() {\nreturn ","\n// The module cache\nvar installedModules = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(installedModules[moduleId])\n\t\treturn installedModules[moduleId].exports;\n\t\n\t// Create a new module (and put it into the cache)\n\tvar module = installedModules[moduleId] = {\n\t\texports: {},\n\t\tid: moduleId,\n\t\tloaded: false\n\t};\n\t\n\t// Execute the module function\n\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\t\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = modules;\n\n// expose the module cache\n__webpack_require__.c = installedModules;\n\n// __webpack_public_path__\n__webpack_require__.p = \"\";\n\n\n// Load entry module and return exports\nreturn __webpack_require__(0);","\"use strict\";\n\nfunction signal(cond) {\n  if (arguments.length <= 1) {\n    return _signal(cond);\n  } else {\n    return restartCase.apply(\n      this,\n      [function(){return _signal(cond);}].concat([].slice.call(arguments, 1)));\n  }\n}\n\nfunction _signal(cond) {\n  HANDLERS.forEach(function(handlerEntry) {\n    if (cond instanceof handlerEntry[0]) {\n      handlerEntry[1](cond);\n    }\n  });\n}\n\nfunction handlerBind(handledBody) {\n  var handlers = [].slice.call(arguments, 1),\n      oldHandlers = HANDLERS;\n  try {\n    HANDLERS = handlers.concat(HANDLERS);\n    return handledBody.call(this);\n  } finally {\n    HANDLERS = oldHandlers;\n  }\n}\n\nfunction handlerCase(handledBody) {\n  var sentinel = {},\n      handlers = [].slice.call(arguments, 1).map(function(handlerEntry) {\n        return [handlerEntry[0], function(e) {\n          sentinel.handler = handlerEntry[1];\n          sentinel.error = e;\n          throw sentinel;\n        }];\n      });\n  try {\n    return handlerBind.apply(this, [handledBody].concat(handlers));\n  } catch (e) {\n    if (e === sentinel) {\n      return sentinel.handler.call(this, sentinel.error);\n    } else {\n      throw e;\n    }\n  }\n}\n\nfunction listRestarts() {\n  // \"Deep enough\" copy to protect the internal RESTARTS array structure from\n  // user shenanigans.\n  return RESTARTS.map(function(x) {\n    return x.map(function(x) { return x; });\n  });\n}\n\nfunction restartCase(restartableBody) {\n  var sentinel = {},\n      oldRestarts = RESTARTS,\n      restarts = [].slice.call(arguments, 1).map(function(entry) {\n        var name = entry[0],\n            description = typeof entry[1] === \"string\" ? entry[1] : \"\",\n            callback = description ? entry[2] : entry[1];\n        return [name, description, function() {\n          sentinel.callback = callback;\n          sentinel.args = arguments;\n          throw sentinel;\n        }];\n      });\n  try {\n    RESTARTS = restarts.concat(RESTARTS);\n    return restartableBody.call(this);\n  } catch(e) {\n    if (e === sentinel) {\n      return sentinel.callback.apply(this, sentinel.args);\n    } else {\n      throw e;\n    }\n  } finally {\n    RESTARTS = oldRestarts;\n  }\n}\n\nfunction restart(name) {\n  return _restart(name);\n}\nfunction _restart(name) {\n  var restart = Array.isArray(name) ? name : findRestart(name),\n      restartArgs = [].slice.call(arguments, 1);\n  restart[restart.length-1].apply(this, restartArgs);\n}\n\nfunction findRestart(name) {\n  if (typeof name === \"string\") {\n    for (var i = 0; i < RESTARTS.length; i++) {\n      if (name === RESTARTS[i][0]) {\n        return RESTARTS[i];\n      }\n      return undefined;\n    }\n  } else {\n    return RESTARTS[name];\n  }\n}\n\n/**\n * Invokes the configured debugger.\n */\nfunction debug(condition) {\n  /*****************************************************************/\n  /* Welcome to the */ debugger; /* Read below for instructions!!! */\n  /*                                                               */\n  /* Restarts may be available.                                    */\n  /* Call showRestarts() in the JS console to list them.           */\n  /*                                                               */\n  /* If you pick a restart, it will be invoked after you unpause   */\n  /* the debugger. Otherwise, `condition` will be thrown.          */\n  /*                                                               */\n  /*                Thanks for using CondJS!                       */\n  /*                                                               */\n  /*****************************************************************/\n  \n  var __chosenRestart,\n      __restartArgs;\n  function restart(name) {\n    __chosenRestart = name;\n    __restartArgs = arguments;\n    console.log(\"You have chosen restart: \", name);\n    console.log(\"Unpause the debugger to continue.\");\n  }\n  function showRestarts() {\n    console.log(\n      (((condition && condition.toString) ? condition.toString() + \"\\n\": \"\") +\n       \"Available restarts: \\n\" +\n       \"\\n\" +\n       RESTARTS.reduce(function(acc, entry, i) {\n         return acc + formatRestart(entry, i) + \"\\n\";\n       }, \"\") + \"\\n\" +\n       \"To use a restart, use `restart(<name or index>[, arg1[, arg2 ...]])`\\n\"+\n       \"\\n\" +\n       \"Unpause your debugger to continue.\" +\n       \"\"));\n  }\n\n  if (__chosenRestart != null) {\n    _restart.apply(this, __restartArgs);\n  } else {\n    throw condition;\n  }\n}\n\nfunction formatRestart(entry, i) {\n  var name = entry[0],\n      description = (typeof entry[1] === \"string\" && entry[1].length) ?\n        \": \"+entry[1] :\n        \"\";\n  return \"[\"+i+\"] \"+entry[0]+description;\n}\n\n/*\n * Internals\n */\n\nvar HANDLERS = [[\n  // If we get an error, force falling back into the debugger.\n  Error, debug\n]],\n    RESTARTS = [];\n\n\nmodule.exports = {\n  signal: signal,\n  handlerBind: handlerBind,\n  handlerCase: handlerCase,\n  restartCase: restartCase,\n  restart: restart,\n  findRestart: findRestart,\n  debug: debug\n};\n"],"sourceRoot":"webpack-module://"}